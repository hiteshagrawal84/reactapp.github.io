{"version":3,"sources":["Student.js","Nav.js","Aboutus.js","Contactus.js","Home.js","Item.js","ItemsList.js","ItemDetail.js","App.js","serviceWorker.js","index.js"],"names":["Student","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","Nav","react_router_dom","to","Aboutus","Contactus","Home","Item","key","props","item","id","name","email","concat","ItemsList","_this","state","items","isLoaded","_this2","axios","get","headers","Authorization","then","response","setState","data","catch","error","console","log","_this$state","map","Item_Item","ItemDetail","match","params","App","Nav_Nav","react_router","path","exact","component","AboutUs","Student_Student","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de41fae6.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Student extends Component {\n  constructor() {\n      super()\n  }\n  \n    render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link ,BrowserRouter as Router} from 'react-router-dom';\n\nexport default class Nav extends Component {\n  render() {\n    return (\n      <div>\n        <ul>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/aboutus\">\n            <li>About Us</li>\n            </Link>\n            <Link to=\"/shop\">\n            <li >Shop</li>\n            </Link>\n            <Link to=\"/contactus\">\n            <li >Contact Us</li>\n            </Link>  \n            </ul>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Aboutus extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Us</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Contactus extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Contact Us</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Home</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link ,BrowserRouter as Router} from 'react-router-dom';\n\nexport default class Item extends Component {\n  render() {\n    return (\n      <div>\n          <li key={this.props.item.id}>{this.props.item.name} | {this.props.item.email}\n          | <Link to={`/shop/${this.props.item.id}`}>View</Link>\n             </li>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Item from './Item';\n\nexport default class ItemsList extends Component {\n  \n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          items :[],\n          isLoaded: false\n        };\n      }\n      \n    componentDidMount() {\n\n        let config = {\n          headers: {\n            'Authorization': 'Bearer: 456645412 ' \n          }\n        }\n    \n        axios.get('http://jsonplaceholder.typicode.com/users', config)\n          .then(response => {\n            this.setState({\n              isLoaded:true,\n              items: response.data\n            }) \n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    \n      }\n  \n  \n    render() {\n        var {isLoaded, items} = this.state;   \n        \n        if(!isLoaded) { \n            return <div>Data Loading..</div>;\n        } else {\n            return (\n        \n\n                <div>\n                  <ul>\n                      {items.map(item => (\n                          <Item key={item.id} item={item} />          \n                      ))};\n          \n                      </ul>\n                </div>\n              )\n        }  \n    \n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class ItemDetail extends Component {\n  \n    constructor(props) {\n        super(props);\n         \n        this.state = {\n          item :[],\n          isLoaded: false\n        };\n      }\n\n      componentDidMount() {\n         var id = this.props.match.params.id; \n    \n        axios.get('http://jsonplaceholder.typicode.com/users/'+id)\n          .then(response => {\n            this.setState({\n              isLoaded:true,\n              item: response.data\n            }) \n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    \n      }\n  \n\n\n  \n    render() {\n        var {isLoaded, item} = this.state;   \n\n        if(!isLoaded) {\n            return <div>Data Loading..</div>\n        } else {\n            return (\n                <div>\n                  {item.name}\n                </div>\n              )\n        }\n    \n  }\n}\n","import React,{Component} from 'react';\nimport Student from './Student';\n\nimport Nav from './Nav';\nimport AboutUs from './Aboutus';\nimport Contactus from './Contactus';\nimport Home from './Home';\nimport ItemsList from './ItemsList';\nimport ItemDetail from './ItemDetail';\n\n\nimport { Route,Link, BrowserRouter as Router ,Switch} from 'react-router-dom';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    \n  }\n\n \n\n  render() {\n \n\n    \n      return (       \n        <div>\n            \n         \n          <Router>\n          <Nav></Nav>\n           \n            \n            <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/aboutus' component={AboutUs} />\n          <Route path='/contactus' component={Contactus} />\n          \n          <Route path='/shop' exact component={ItemsList} />\n          <Route path='/shop/:id' component={ItemDetail} /> \n          </Switch> \n          </Router>\n           <Student></Student>\n           \n            \n\n\n        </div>\n      ); \n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}